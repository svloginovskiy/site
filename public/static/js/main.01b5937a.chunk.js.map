{"version":3,"sources":["components/UI/button/ActionButton.jsx","components/PostTable.jsx","API/PostService.js","utils/pages.js","components/UI/pagination/Pagination.jsx","components/SideBar.jsx","components/UserTable.jsx","API/UserService.js","App.js","index.js"],"names":["ActionButton","children","props","className","PostTable","posts","remove","edit","scope","map","post","title","href","id","user","category","onClick","PostService","limit","page","options","headers","fetch","response","method","getPageCount","totalCount","Math","ceil","Pagination","totalPages","changePage","pagesArray","result","i","push","getPagesArray","p","SideBar","setCurrentMode","UserTable","users","name","email","role","UserService","App","useState","link","setPosts","setUsers","setPage","setTotalPages","currentMode","a","getPage","json","newposts","console","log","get","newusers","useEffect","fetchPosts","fetchUsers","filter","deletePost","u","deleteUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01b5937a.chunk.js","sourcesContent":["import React from 'react';\n\nconst ActionButton = ({children, ...props}) => {\n    return (\n        <button {...props} className=\"btn btn-primary\">\n            {children}\n        </button>\n    );\n};\n\nexport default ActionButton;","import React from 'react';\nimport ActionButton from \"./UI/button/ActionButton\";\n\nconst PostTable = ({posts, remove, edit}) => {\n\n    return (\n        <table className=\"table table-striped\">\n            <thead>\n            <tr>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Link</th>\n                <th scope=\"col\">Created by</th>\n                <th scope=\"col\">Category</th>\n                <th scope=\"col\">Action</th>\n            </tr>\n            </thead>\n            <tbody>\n            {posts.map((post) =>\n                <tr key={post.id}>\n                    <th scope=\"col\">{post.title}</th>\n                    <th scope=\"col\"><a href={`/posts/${post.id}`}>link</a></th>\n                    <th scope=\"col\">{post.user}</th>\n                    <th scope=\"col\">{post.category}</th>\n                    <th scope=\"col\"><ActionButton onClick={() => remove(post)}>Delete</ActionButton> <ActionButton onClick={() => edit(post)}>Edit</ActionButton></th>\n                </tr>\n            )}\n            </tbody>\n        </table>\n    );\n};\n\nexport default PostTable;","export default class PostService {\n    static async getPage(limit = 14, page = 1) {\n        let options = {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            }\n        };\n        const response = await fetch('/json/posts?limit=' + limit + '&page='+ page, options);\n        return response;\n    }\n\n    static async deletePost(id) {\n        await fetch(`/admin/posts/${id}/delete`, {method: 'POST', headers: {'Content-Type': 'application/x-www-form-urlencoded'}});\n    }\n}","export const getPageCount = (totalCount, limit) => {\n    return Math.ceil(totalCount / limit);\n}\n\nexport const getPagesArray = (totalPages) => {\n    let result = [];\n    for (let i = 1; i < totalPages + 1; i++) {\n        result.push(i);\n    }\n    return result;\n}","import React from 'react';\nimport {getPagesArray} from \"../../../utils/pages\";\n\nconst Pagination = ({totalPages, page, changePage}) => {\n    let pagesArray = getPagesArray(totalPages);\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <nav>\n                <ul className=\"pagination\">\n                    {pagesArray.map(p =>\n                        <li key={p}\n                            onClick={() => changePage(p)}\n                            className={p === page ? \"page-item active\" : \"page-item\"}\n                        >\n                            <button className=\"page-link\" href=\"\">{p}</button>\n                        </li>\n                    )}\n                </ul>\n            </nav>\n        </div>\n    );\n};\n\nexport default Pagination;","import React from 'react';\n\nconst SideBar = ({setCurrentMode}) => {\n    return (\n        <div>\n            <button onClick={() => setCurrentMode('posts')} className=\"btn btn-outline-secondary btn-lg w-100\">Posts</button>\n            <button onClick={() => setCurrentMode('users')} className=\"btn btn-outline-secondary btn-lg w-100\">Users</button>\n        </div>\n    );\n};\n\nexport default SideBar;","import React from 'react';\nimport ActionButton from \"./UI/button/ActionButton\";\n\nconst UserTable = ({users, remove, edit}) => {\n    return (\n        <table className=\"table table-striped\">\n            <thead>\n            <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Username</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Role</th>\n                <th scope=\"col\">Action</th>\n            </tr>\n            </thead>\n            <tbody>\n            {users.map((user) =>\n                <tr key={user.id}>\n                    <th scope=\"col\">{user.id}</th>\n                    <th scope=\"col\">{user.name}</th>\n                    <th scope=\"col\">{user.email}</th>\n                    <th scope=\"col\">{user.role}</th>\n                    <th scope=\"col\"><ActionButton onClick={() => remove(user)}>Delete</ActionButton> <ActionButton\n                        onClick={() => edit(user)}>Edit</ActionButton></th>\n                </tr>\n            )}\n            </tbody>\n        </table>\n    );\n};\n\nexport default UserTable;","export default class UserService {\n    static async getPage(limit = 14, page = 1) {\n        let options = {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            }\n        };\n        const response = await fetch('/json/users?limit=' + limit + '&page='+ page, options);\n        return response;\n    }\n\n    static async deleteUser(id) {\n        await fetch(`/admin/users/${id}/delete`, {method: 'POST', headers: {'Content-Type': 'application/x-www-form-urlencoded'}});\n    }\n}","import React, {useEffect, useState} from \"react\";\nimport \"./styles/App.css\";\nimport ActionButton from \"./components/UI/button/ActionButton\";\nimport PostTable from \"./components/PostTable\";\nimport PostService from \"./API/PostService\";\nimport {getPageCount, getPagesArray} from \"./utils/pages\";\nimport Pagination from \"./components/UI/pagination/Pagination\";\nimport SideBar from \"./components/SideBar\";\nimport UserTable from \"./components/UserTable\";\nimport UserService from \"./API/UserService\";\n\nfunction App() {\n    const [posts, setPosts] = useState([\n        {id: 1, link: '#', title: 'Javascript', user: 'user', category: 'news'},\n        {id: 2, link: '#', title: 'Javascript', user: 'user', category: 'news'},\n        {id: 3, link: '#', title: 'Javascript', user: 'user', category: 'news'},\n    ]);\n    const [users, setUsers] = useState([\n        {id: 1, name: 'Admin', email: 'email@email.org', role: 'admin'},\n        {id: 2, name: 'Alan', email: 'email@email.org', role: 'writer'},\n        {id: 3, name: 'Turing', email: 'email@email.org', role: 'reader'},\n    ])\n    const [page, setPage] = useState(1);\n    const [limit, setLimit] = useState(14);\n    const [totalPages, setTotalPages] = useState(10);\n    const [currentMode, setCurrentMode] = useState('posts');\n\n    useEffect(() => {\n        if (currentMode === 'posts') {\n            fetchPosts();\n        } else {\n            fetchUsers();\n        }\n    }, [page, currentMode])\n\n    useEffect(() => {\n        setPage(1);\n    }, [currentMode])\n\n    const changePage = (page) => {\n        setPage(page)\n    }\n\n    async function fetchPosts() {\n        const response = await PostService.getPage(limit, page);\n        const newposts = await response.json();\n        console.log(newposts);\n        setPosts(newposts);\n        console.log(posts);\n        const totalCount = response.headers.get('x-total-count');\n        setTotalPages(getPageCount(totalCount, limit));\n    }\n\n    async function fetchUsers() {\n        const response = await UserService.getPage(limit, page);\n        const newusers = await response.json();\n        setUsers(newusers);\n        const totalCount = response.headers.get('x-total-count');\n        setTotalPages(getPageCount(totalCount, limit));\n    }\n\n    const removePost = (post) => {\n        setPosts(posts.filter(p => p.id !== post.id))\n        PostService.deletePost(post.id)\n    }\n    const editPost = (post) => {\n\n    }\n    const removeUser = (user) => {\n        setUsers(users.filter(u => u.id !== user.id))\n        UserService.deleteUser(user.id)\n    }\n    const editUser = (user) => {\n\n    }\n\n    return (\n        <div className=\"App container-fluid h-100\">\n            <div className=\"row h-100\">\n                <div className=\"col-1 border-end border-2 px-0 h-100\">\n                    <SideBar setCurrentMode={setCurrentMode}/>\n                </div>\n                <div className=\"col-11 px-0\"> {\n                    currentMode === 'posts'\n                        ? <PostTable posts={posts} remove={removePost} edit={editPost}/>\n                        : <UserTable users={users} remove={removeUser} edit={editUser}/>\n                }\n                    <Pagination totalPages={totalPages} page={page} changePage={changePage}/>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}