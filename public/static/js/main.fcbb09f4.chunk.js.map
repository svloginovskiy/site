{"version":3,"sources":["components/UI/button/ActionButton.jsx","components/PostTable.jsx","API/PostService.js","utils/pages.js","components/UI/pagination/Pagination.jsx","components/SideBar.jsx","components/UserTable.jsx","API/UserService.js","components/UI/AdminModal/AdminModal.jsx","components/EditPostForm.jsx","components/EditUserForm.jsx","App.js","index.js","components/UI/AdminModal/AdminModal.module.css"],"names":["ActionButton","children","props","className","PostTable","posts","remove","edit","scope","map","post","title","href","id","user","category","onClick","PostService","limit","page","options","headers","fetch","response","method","body","URLSearchParams","getPageCount","totalCount","Math","ceil","Pagination","totalPages","changePage","pagesArray","result","i","push","getPagesArray","p","SideBar","setCurrentMode","UserTable","users","name","email","role","UserService","MyModal","visible","setVisible","rootClasses","cl","adminModal","active","join","adminModalContent","e","stopPropagation","EditPostForm","save","useState","textAreaValue","setTextAreaValue","titleInputValue","setTitleInputValue","selectValue","setSelectValue","useEffect","text","action","encType","onChange","event","target","value","form","required","disabled","selected","type","placeholder","htmlFor","style","height","resize","preventDefault","EditUserForm","selectedRole","setSelectedRole","App","link","setPosts","setUsers","setPage","setTotalPages","currentMode","modal","setModal","selectedPost","setSelectedPost","selectedUser","setSelectedUser","a","getPage","json","newposts","console","log","get","newusers","fetchPosts","fetchUsers","filter","deletePost","u","deleteUser","AdminModal","savePost","saveUser","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fcbb09f4.chunk.js","sourcesContent":["import React from 'react';\n\nconst ActionButton = ({children, ...props}) => {\n    return (\n        <button {...props} className=\"btn btn-primary\">\n            {children}\n        </button>\n    );\n};\n\nexport default ActionButton;","import React from 'react';\nimport ActionButton from \"./UI/button/ActionButton\";\n\nconst PostTable = ({posts, remove, edit}) => {\n\n    return (\n        <table className=\"table table-striped\">\n            <thead>\n            <tr>\n                <th scope=\"col\">Title</th>\n                <th scope=\"col\">Link</th>\n                <th scope=\"col\">Created by</th>\n                <th scope=\"col\">Category</th>\n                <th scope=\"col\">Action</th>\n            </tr>\n            </thead>\n            <tbody>\n            {posts.map((post) =>\n                <tr key={post.id}>\n                    <th scope=\"col\">{post.title}</th>\n                    <th scope=\"col\"><a href={`/posts/${post.id}`}>link</a></th>\n                    <th scope=\"col\">{post.user}</th>\n                    <th scope=\"col\">{post.category}</th>\n                    <th scope=\"col\"><ActionButton onClick={() => remove(post)}>Delete</ActionButton> <ActionButton onClick={() => edit(post)}>Edit</ActionButton></th>\n                </tr>\n            )}\n            </tbody>\n        </table>\n    );\n};\n\nexport default PostTable;","export default class PostService {\n    static async getPage(limit = 14, page = 1) {\n        let options = {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            }\n        };\n        const response = await fetch('/json/posts?limit=' + limit + '&page=' + page, options);\n        return response;\n    }\n\n    static async deletePost(id) {\n        await fetch(`/admin/posts/${id}/delete`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n        });\n    }\n\n    static async savePost(post) {\n        await fetch(`/newadmin/posts/${post.id}/edit`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n            body: new URLSearchParams(post)\n        })\n    }\n}","export const getPageCount = (totalCount, limit) => {\n    return Math.ceil(totalCount / limit);\n}\n\nexport const getPagesArray = (totalPages) => {\n    let result = [];\n    for (let i = 1; i < totalPages + 1; i++) {\n        result.push(i);\n    }\n    return result;\n}","import React from 'react';\nimport {getPagesArray} from \"../../../utils/pages\";\n\nconst Pagination = ({totalPages, page, changePage}) => {\n    let pagesArray = getPagesArray(totalPages);\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <nav>\n                <ul className=\"pagination\">\n                    {pagesArray.map(p =>\n                        <li key={p}\n                            onClick={() => changePage(p)}\n                            className={p === page ? \"page-item active\" : \"page-item\"}\n                        >\n                            <button className=\"page-link\" href=\"\">{p}</button>\n                        </li>\n                    )}\n                </ul>\n            </nav>\n        </div>\n    );\n};\n\nexport default Pagination;","import React from 'react';\n\nconst SideBar = ({setCurrentMode}) => {\n    return (\n        <div>\n            <button onClick={() => setCurrentMode('posts')} className=\"btn btn-outline-secondary btn-lg w-100\">Posts</button>\n            <button onClick={() => setCurrentMode('users')} className=\"btn btn-outline-secondary btn-lg w-100\">Users</button>\n        </div>\n    );\n};\n\nexport default SideBar;","import React from 'react';\nimport ActionButton from \"./UI/button/ActionButton\";\n\nconst UserTable = ({users, remove, edit}) => {\n    return (\n        <table className=\"table table-striped\">\n            <thead>\n            <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Username</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Role</th>\n                <th scope=\"col\">Action</th>\n            </tr>\n            </thead>\n            <tbody>\n            {users.map((user) =>\n                <tr key={user.id}>\n                    <th scope=\"col\">{user.id}</th>\n                    <th scope=\"col\">{user.name}</th>\n                    <th scope=\"col\">{user.email}</th>\n                    <th scope=\"col\">{user.role}</th>\n                    <th scope=\"col\"><ActionButton onClick={() => remove(user)}>Delete</ActionButton> <ActionButton\n                        onClick={() => edit(user)}>Edit</ActionButton></th>\n                </tr>\n            )}\n            </tbody>\n        </table>\n    );\n};\n\nexport default UserTable;","export default class UserService {\n    static async getPage(limit = 14, page = 1) {\n        let options = {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            }\n        };\n        const response = await fetch('/json/users?limit=' + limit + '&page='+ page, options);\n        return response;\n    }\n\n    static async deleteUser(id) {\n        await fetch(`/admin/users/${id}/delete`, {method: 'POST', headers: {'Content-Type': 'application/x-www-form-urlencoded'}});\n    }\n\n    static async saveUser(user) {\n        await fetch(`/newadmin/users/${user.id}/edit`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n            body: new URLSearchParams(user)\n        });\n    }\n}","import React from 'react';\nimport cl from './AdminModal.module.css';\n\nconst MyModal = ({children, visible, setVisible}) => {\n\n    const rootClasses = [cl.adminModal]\n\n    if (visible) {\n        rootClasses.push(cl.active);\n    }\n\n    return (\n        <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\n            <div className={cl.adminModalContent} onClick={(e) => e.stopPropagation()}>\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default MyModal;","import React, {useEffect, useState} from 'react';\n\nconst EditPostForm = ({post, save, setVisible}) => {\n    const [textAreaValue, setTextAreaValue] = useState('');\n    const [titleInputValue, setTitleInputValue] = useState('');\n    const [selectValue, setSelectValue] = useState('');\n    useEffect(()=>{\n        setTextAreaValue(post.text);\n        setTitleInputValue(post.title);\n        setSelectValue(post.category);\n    }, [post]);\n    const onClickFunction = (event) => {\n        event.preventDefault();\n        save({...post, title: titleInputValue, text: textAreaValue, category: selectValue});\n        setVisible(false);\n    }\n    return (\n        <form className=\"form-floating pt-3\" action=\"/submit\" method=\"POST\" encType=\"multipart/form-data\">\n            <select className=\"form-select mb-1\" onChange={event => setSelectValue(event.target.value)} form=\"\" required>\n                <option disabled selected value=\"-1\">Category</option>\n                <option value=\"news\">News</option>\n                <option value=\"memes\">Memes</option>\n            </select>\n            <div className=\"form-floating mb-1\">\n                <input type=\"text\"\n                       className=\"form-control border fw-bold\"\n                       placeholder=\"Title\" name=\"title\" value={titleInputValue}\n                       onChange={(e) => setTitleInputValue(e.target.value)}\n                       required/>\n                <label className=\"text-muted fw-bold\" htmlFor=\"postTitle\">Edit title</label>\n            </div>\n            <div className=\"mb-3\">\n                    <textarea\n                        className=\"form-control border\"\n                        placeholder=\"Enter text\"\n                        id=\"postText\"\n                        style={{height: '10rem', resize: 'none'}} name=\"text\" value={textAreaValue}\n                        onChange={(e) => setTextAreaValue(e.target.value)}\n                    />\n            </div>\n            <div className=\"d-flex\">\n                <button type=\"submit\" className=\"btn btn-primary mb-3\" onClick={onClickFunction}>Save</button>\n            </div>\n        </form>\n    );\n};\n\nexport default EditPostForm;","import React, {useEffect, useState} from 'react';\n\nconst EditUserForm = ({user, save, setVisible}) => {\n\n    const [selectedRole, setSelectedRole] = useState('');\n\n    useEffect(() => {\n        setSelectedRole(user.role);\n    }, [user])\n\n    const onClickFunction = (event) => {\n        event.preventDefault();\n        save({...user, role: selectedRole});\n        setVisible(false);\n    }\n\n    return (\n        <form>\n            <h2>Choose role</h2>\n            <select className=\"form-select mb-2\" form=\"roleFrom\"\n                    onChange={(event) => setSelectedRole(event.target.value)} required>\n                <option value=\"admin\">Admin</option>\n                <option value=\"writer\">Writer</option>\n            </select>\n            <button type=\"submit\" className=\"btn btn-primary mb-0\" onClick={onClickFunction}>Save</button>\n        </form>\n    );\n};\n\nexport default EditUserForm;","import React, {useEffect, useState} from \"react\";\nimport \"./styles/App.css\";\nimport ActionButton from \"./components/UI/button/ActionButton\";\nimport PostTable from \"./components/PostTable\";\nimport PostService from \"./API/PostService\";\nimport {getPageCount, getPagesArray} from \"./utils/pages\";\nimport Pagination from \"./components/UI/pagination/Pagination\";\nimport SideBar from \"./components/SideBar\";\nimport UserTable from \"./components/UserTable\";\nimport UserService from \"./API/UserService\";\nimport AdminModal from \"./components/UI/AdminModal/AdminModal\";\nimport EditPostForm from \"./components/EditPostForm\";\nimport EditUserForm from \"./components/EditUserForm\";\n\nfunction App() {\n    const [posts, setPosts] = useState([\n        {id: 1, link: '#', title: 'Javascript1', user: 'user2', category: 'news', text: 'it\\'s'},\n        {id: 2, link: '#', title: 'Javascript2', user: 'user3', category: 'news', text: 'ticking'},\n        {id: 3, link: '#', title: 'Javascript3', user: 'user1', category: 'news', text: 'away'},\n    ]);\n    const [users, setUsers] = useState([\n        {id: 1, name: 'Admin', email: 'email@email.org', role: 'admin'},\n        {id: 2, name: 'Alan', email: 'email@email.org', role: 'writer'},\n        {id: 3, name: 'Turing', email: 'email@email.org', role: 'reader'},\n    ])\n    const [page, setPage] = useState(1);\n    const [limit, setLimit] = useState(13);\n    const [totalPages, setTotalPages] = useState(10);\n    const [currentMode, setCurrentMode] = useState('posts');\n    const [modal, setModal] = useState(false);\n    const [selectedPost, setSelectedPost] = useState({});\n    const [selectedUser, setSelectedUser] = useState({});\n\n    useEffect(() => {\n        if (currentMode === 'posts') {\n            fetchPosts();\n        } else {\n            fetchUsers();\n        }\n    }, [page, currentMode])\n\n    useEffect(() => {\n        setPage(1);\n    }, [currentMode])\n\n    const changePage = (page) => {\n        setPage(page)\n    }\n\n    async function fetchPosts() {\n        const response = await PostService.getPage(limit, page);\n        const newposts = await response.json();\n        console.log(newposts);\n        setPosts(newposts);\n        console.log(posts);\n        const totalCount = response.headers.get('x-total-count');\n        setTotalPages(getPageCount(totalCount, limit));\n    }\n\n    async function fetchUsers() {\n        const response = await UserService.getPage(limit, page);\n        const newusers = await response.json();\n        setUsers(newusers);\n        const totalCount = response.headers.get('x-total-count');\n        setTotalPages(getPageCount(totalCount, limit));\n    }\n\n    const removePost = (post) => {\n        setPosts(posts.filter(p => p.id !== post.id))\n        PostService.deletePost(post.id)\n    }\n    const editPost = (post) => {\n        setModal(true);\n        setSelectedPost(post);\n    }\n    const savePost = (post) => {\n        setPosts(posts.map(p => p.id === post.id ? post : p));\n        PostService.savePost(post);\n    }\n    const removeUser = (user) => {\n        setUsers(users.filter(u => u.id !== user.id))\n        UserService.deleteUser(user.id)\n    }\n    const editUser = (user) => {\n        setModal(true);\n        setSelectedUser(user);\n    }\n    const saveUser = (user) => {\n        setUsers(users.map(u => u.id === user.id ? user : u));\n        UserService.saveUser(user);\n    }\n\n    return (\n        <div className=\"App container-fluid h-100\">\n            <div className=\"row h-100\">\n                <div className=\"col-1 border-end border-2 px-0 h-100\">\n                    <SideBar setCurrentMode={setCurrentMode}/>\n                </div>\n                <div className=\"col-11 px-0\"> {\n                    currentMode === 'posts'\n                        ? <PostTable posts={posts} remove={removePost} edit={editPost}/>\n                        : <UserTable users={users} remove={removeUser} edit={editUser}/>\n                }\n                    <Pagination totalPages={totalPages} page={page} changePage={changePage}/>\n                </div>\n            </div>\n            <AdminModal visible={modal} setVisible={setModal}>\n                {currentMode === 'posts'\n                    ? <EditPostForm post={selectedPost} save={savePost} setVisible={setModal}/>\n                    : <EditUserForm user={selectedUser} save={saveUser} setVisible={setModal}/>\n                }\n\n            </AdminModal>\n        </div>\n\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"adminModal\":\"AdminModal_adminModal__3Htn7\",\"adminModalContent\":\"AdminModal_adminModalContent__3lPtY\",\"active\":\"AdminModal_active__2lwig\"};"],"sourceRoot":""}